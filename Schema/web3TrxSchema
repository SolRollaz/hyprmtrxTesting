import mongoose from "mongoose";

const web3TrxSchema = new mongoose.Schema({
  transaction_id: { type: String, required: true, unique: true },
  user_name: { type: String, required: true, index: true },

  type: {
    type: String,
    enum: ["deposit", "withdrawal", "transfer", "swap", "nft_purchase", "nft_sale"],
    required: true
  },

  token: { type: String, required: true },
  amount: { type: Number, required: true },
  network: { type: String, required: true },

  recipient: {
    type: String,
    default: null,
    index: true
  },

  status: {
    type: String,
    enum: ["pending", "confirmed", "failed"],
    default: "pending"
  },

  tx_hash: {
    type: String,
    default: null,
    unique: true,
    sparse: true
  },

  explorer_url: {
    type: String,
    default: null
  },

  processed_by: {
    type: String,
    default: null
  },

  metadata: {
    type: mongoose.Schema.Types.Mixed,
    default: {}
  },

  created_at: { type: Date, default: Date.now },
  confirmed_at: { type: Date, default: null }
});

web3TrxSchema.methods.markConfirmed = function () {
  this.status = "confirmed";
  this.confirmed_at = new Date();
  return this.save();
};

const WEB3_Transaction = mongoose.model("WEB3_Transaction", web3TrxSchema);

export default WEB3_Transaction;
